/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.watchman.avro.schema;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AvroEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2637853096627306594L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvroEvent\",\"namespace\":\"com.watchman.avro.schema\",\"fields\":[{\"name\":\"eventId\",\"type\":\"string\"},{\"name\":\"userName\",\"type\":\"string\"},{\"name\":\"timeStamp\",\"type\":\"long\"},{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"browser\",\"type\":\"string\"},{\"name\":\"device\",\"type\":\"string\"},{\"name\":\"payload\",\"type\":{\"type\":\"map\",\"values\":[\"string\",\"long\"]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AvroEvent> ENCODER =
      new BinaryMessageEncoder<AvroEvent>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AvroEvent> DECODER =
      new BinaryMessageDecoder<AvroEvent>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AvroEvent> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AvroEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AvroEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AvroEvent>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AvroEvent to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AvroEvent from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AvroEvent instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AvroEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence eventId;
   private java.lang.CharSequence userName;
   private long timeStamp;
   private java.lang.CharSequence country;
   private java.lang.CharSequence browser;
   private java.lang.CharSequence device;
   private java.util.Map<java.lang.CharSequence,java.lang.Object> payload;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AvroEvent() {}

  /**
   * All-args constructor.
   * @param eventId The new value for eventId
   * @param userName The new value for userName
   * @param timeStamp The new value for timeStamp
   * @param country The new value for country
   * @param browser The new value for browser
   * @param device The new value for device
   * @param payload The new value for payload
   */
  public AvroEvent(java.lang.CharSequence eventId, java.lang.CharSequence userName, java.lang.Long timeStamp, java.lang.CharSequence country, java.lang.CharSequence browser, java.lang.CharSequence device, java.util.Map<java.lang.CharSequence,java.lang.Object> payload) {
    this.eventId = eventId;
    this.userName = userName;
    this.timeStamp = timeStamp;
    this.country = country;
    this.browser = browser;
    this.device = device;
    this.payload = payload;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return eventId;
    case 1: return userName;
    case 2: return timeStamp;
    case 3: return country;
    case 4: return browser;
    case 5: return device;
    case 6: return payload;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: eventId = (java.lang.CharSequence)value$; break;
    case 1: userName = (java.lang.CharSequence)value$; break;
    case 2: timeStamp = (java.lang.Long)value$; break;
    case 3: country = (java.lang.CharSequence)value$; break;
    case 4: browser = (java.lang.CharSequence)value$; break;
    case 5: device = (java.lang.CharSequence)value$; break;
    case 6: payload = (java.util.Map<java.lang.CharSequence,java.lang.Object>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'eventId' field.
   * @return The value of the 'eventId' field.
   */
  public java.lang.CharSequence getEventId() {
    return eventId;
  }


  /**
   * Sets the value of the 'eventId' field.
   * @param value the value to set.
   */
  public void setEventId(java.lang.CharSequence value) {
    this.eventId = value;
  }

  /**
   * Gets the value of the 'userName' field.
   * @return The value of the 'userName' field.
   */
  public java.lang.CharSequence getUserName() {
    return userName;
  }


  /**
   * Sets the value of the 'userName' field.
   * @param value the value to set.
   */
  public void setUserName(java.lang.CharSequence value) {
    this.userName = value;
  }

  /**
   * Gets the value of the 'timeStamp' field.
   * @return The value of the 'timeStamp' field.
   */
  public long getTimeStamp() {
    return timeStamp;
  }


  /**
   * Sets the value of the 'timeStamp' field.
   * @param value the value to set.
   */
  public void setTimeStamp(long value) {
    this.timeStamp = value;
  }

  /**
   * Gets the value of the 'country' field.
   * @return The value of the 'country' field.
   */
  public java.lang.CharSequence getCountry() {
    return country;
  }


  /**
   * Sets the value of the 'country' field.
   * @param value the value to set.
   */
  public void setCountry(java.lang.CharSequence value) {
    this.country = value;
  }

  /**
   * Gets the value of the 'browser' field.
   * @return The value of the 'browser' field.
   */
  public java.lang.CharSequence getBrowser() {
    return browser;
  }


  /**
   * Sets the value of the 'browser' field.
   * @param value the value to set.
   */
  public void setBrowser(java.lang.CharSequence value) {
    this.browser = value;
  }

  /**
   * Gets the value of the 'device' field.
   * @return The value of the 'device' field.
   */
  public java.lang.CharSequence getDevice() {
    return device;
  }


  /**
   * Sets the value of the 'device' field.
   * @param value the value to set.
   */
  public void setDevice(java.lang.CharSequence value) {
    this.device = value;
  }

  /**
   * Gets the value of the 'payload' field.
   * @return The value of the 'payload' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.Object> getPayload() {
    return payload;
  }


  /**
   * Sets the value of the 'payload' field.
   * @param value the value to set.
   */
  public void setPayload(java.util.Map<java.lang.CharSequence,java.lang.Object> value) {
    this.payload = value;
  }

  /**
   * Creates a new AvroEvent RecordBuilder.
   * @return A new AvroEvent RecordBuilder
   */
  public static com.watchman.avro.schema.AvroEvent.Builder newBuilder() {
    return new com.watchman.avro.schema.AvroEvent.Builder();
  }

  /**
   * Creates a new AvroEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AvroEvent RecordBuilder
   */
  public static com.watchman.avro.schema.AvroEvent.Builder newBuilder(com.watchman.avro.schema.AvroEvent.Builder other) {
    if (other == null) {
      return new com.watchman.avro.schema.AvroEvent.Builder();
    } else {
      return new com.watchman.avro.schema.AvroEvent.Builder(other);
    }
  }

  /**
   * Creates a new AvroEvent RecordBuilder by copying an existing AvroEvent instance.
   * @param other The existing instance to copy.
   * @return A new AvroEvent RecordBuilder
   */
  public static com.watchman.avro.schema.AvroEvent.Builder newBuilder(com.watchman.avro.schema.AvroEvent other) {
    if (other == null) {
      return new com.watchman.avro.schema.AvroEvent.Builder();
    } else {
      return new com.watchman.avro.schema.AvroEvent.Builder(other);
    }
  }

  /**
   * RecordBuilder for AvroEvent instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroEvent>
    implements org.apache.avro.data.RecordBuilder<AvroEvent> {

    private java.lang.CharSequence eventId;
    private java.lang.CharSequence userName;
    private long timeStamp;
    private java.lang.CharSequence country;
    private java.lang.CharSequence browser;
    private java.lang.CharSequence device;
    private java.util.Map<java.lang.CharSequence,java.lang.Object> payload;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.watchman.avro.schema.AvroEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.eventId)) {
        this.eventId = data().deepCopy(fields()[0].schema(), other.eventId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.userName)) {
        this.userName = data().deepCopy(fields()[1].schema(), other.userName);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.timeStamp)) {
        this.timeStamp = data().deepCopy(fields()[2].schema(), other.timeStamp);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.country)) {
        this.country = data().deepCopy(fields()[3].schema(), other.country);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.browser)) {
        this.browser = data().deepCopy(fields()[4].schema(), other.browser);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.device)) {
        this.device = data().deepCopy(fields()[5].schema(), other.device);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.payload)) {
        this.payload = data().deepCopy(fields()[6].schema(), other.payload);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
    }

    /**
     * Creates a Builder by copying an existing AvroEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(com.watchman.avro.schema.AvroEvent other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.eventId)) {
        this.eventId = data().deepCopy(fields()[0].schema(), other.eventId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.userName)) {
        this.userName = data().deepCopy(fields()[1].schema(), other.userName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timeStamp)) {
        this.timeStamp = data().deepCopy(fields()[2].schema(), other.timeStamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.country)) {
        this.country = data().deepCopy(fields()[3].schema(), other.country);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.browser)) {
        this.browser = data().deepCopy(fields()[4].schema(), other.browser);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.device)) {
        this.device = data().deepCopy(fields()[5].schema(), other.device);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.payload)) {
        this.payload = data().deepCopy(fields()[6].schema(), other.payload);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'eventId' field.
      * @return The value.
      */
    public java.lang.CharSequence getEventId() {
      return eventId;
    }


    /**
      * Sets the value of the 'eventId' field.
      * @param value The value of 'eventId'.
      * @return This builder.
      */
    public com.watchman.avro.schema.AvroEvent.Builder setEventId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.eventId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'eventId' field has been set.
      * @return True if the 'eventId' field has been set, false otherwise.
      */
    public boolean hasEventId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'eventId' field.
      * @return This builder.
      */
    public com.watchman.avro.schema.AvroEvent.Builder clearEventId() {
      eventId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'userName' field.
      * @return The value.
      */
    public java.lang.CharSequence getUserName() {
      return userName;
    }


    /**
      * Sets the value of the 'userName' field.
      * @param value The value of 'userName'.
      * @return This builder.
      */
    public com.watchman.avro.schema.AvroEvent.Builder setUserName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.userName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'userName' field has been set.
      * @return True if the 'userName' field has been set, false otherwise.
      */
    public boolean hasUserName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'userName' field.
      * @return This builder.
      */
    public com.watchman.avro.schema.AvroEvent.Builder clearUserName() {
      userName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'timeStamp' field.
      * @return The value.
      */
    public long getTimeStamp() {
      return timeStamp;
    }


    /**
      * Sets the value of the 'timeStamp' field.
      * @param value The value of 'timeStamp'.
      * @return This builder.
      */
    public com.watchman.avro.schema.AvroEvent.Builder setTimeStamp(long value) {
      validate(fields()[2], value);
      this.timeStamp = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'timeStamp' field has been set.
      * @return True if the 'timeStamp' field has been set, false otherwise.
      */
    public boolean hasTimeStamp() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'timeStamp' field.
      * @return This builder.
      */
    public com.watchman.avro.schema.AvroEvent.Builder clearTimeStamp() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'country' field.
      * @return The value.
      */
    public java.lang.CharSequence getCountry() {
      return country;
    }


    /**
      * Sets the value of the 'country' field.
      * @param value The value of 'country'.
      * @return This builder.
      */
    public com.watchman.avro.schema.AvroEvent.Builder setCountry(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.country = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'country' field has been set.
      * @return True if the 'country' field has been set, false otherwise.
      */
    public boolean hasCountry() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'country' field.
      * @return This builder.
      */
    public com.watchman.avro.schema.AvroEvent.Builder clearCountry() {
      country = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'browser' field.
      * @return The value.
      */
    public java.lang.CharSequence getBrowser() {
      return browser;
    }


    /**
      * Sets the value of the 'browser' field.
      * @param value The value of 'browser'.
      * @return This builder.
      */
    public com.watchman.avro.schema.AvroEvent.Builder setBrowser(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.browser = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'browser' field has been set.
      * @return True if the 'browser' field has been set, false otherwise.
      */
    public boolean hasBrowser() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'browser' field.
      * @return This builder.
      */
    public com.watchman.avro.schema.AvroEvent.Builder clearBrowser() {
      browser = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'device' field.
      * @return The value.
      */
    public java.lang.CharSequence getDevice() {
      return device;
    }


    /**
      * Sets the value of the 'device' field.
      * @param value The value of 'device'.
      * @return This builder.
      */
    public com.watchman.avro.schema.AvroEvent.Builder setDevice(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.device = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'device' field has been set.
      * @return True if the 'device' field has been set, false otherwise.
      */
    public boolean hasDevice() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'device' field.
      * @return This builder.
      */
    public com.watchman.avro.schema.AvroEvent.Builder clearDevice() {
      device = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'payload' field.
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,java.lang.Object> getPayload() {
      return payload;
    }


    /**
      * Sets the value of the 'payload' field.
      * @param value The value of 'payload'.
      * @return This builder.
      */
    public com.watchman.avro.schema.AvroEvent.Builder setPayload(java.util.Map<java.lang.CharSequence,java.lang.Object> value) {
      validate(fields()[6], value);
      this.payload = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'payload' field has been set.
      * @return True if the 'payload' field has been set, false otherwise.
      */
    public boolean hasPayload() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'payload' field.
      * @return This builder.
      */
    public com.watchman.avro.schema.AvroEvent.Builder clearPayload() {
      payload = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AvroEvent build() {
      try {
        AvroEvent record = new AvroEvent();
        record.eventId = fieldSetFlags()[0] ? this.eventId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.userName = fieldSetFlags()[1] ? this.userName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.timeStamp = fieldSetFlags()[2] ? this.timeStamp : (java.lang.Long) defaultValue(fields()[2]);
        record.country = fieldSetFlags()[3] ? this.country : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.browser = fieldSetFlags()[4] ? this.browser : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.device = fieldSetFlags()[5] ? this.device : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.payload = fieldSetFlags()[6] ? this.payload : (java.util.Map<java.lang.CharSequence,java.lang.Object>) defaultValue(fields()[6]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AvroEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<AvroEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AvroEvent>
    READER$ = (org.apache.avro.io.DatumReader<AvroEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










